fetch("https://gamesense.pub/?KeyValue2_EndpointFullUri:https://kv501.prod.do.dsp.mp.microsoft.com/all")
Promise {<pending>}__proto__: Promisecatch: ƒ catch()constructor: ƒ Promise()all: ƒ all()allSettled: ƒ allSettled()any: ƒ any()arguments: (...)caller: (...)length: 1name: "Promise"prototype: Promise {Symbol(Symbol.toStringTag): "Promise", constructor: ƒ, then: ƒ, catch: ƒ, finally: ƒ}race: ƒ race()reject: ƒ reject()resolve: ƒ resolve()Symbol(Symbol.species): (...)get Symbol(Symbol.species): ƒ [Symbol.species]()__proto__: ƒ ()[[Scopes]]: Scopes[0]finally: ƒ finally()then: ƒ then()Symbol(Symbol.toStringTag): "Promise"__proto__: Object[[PromiseState]]: "fulfilled"[[PromiseResult]]: Responsebody: (...)bodyUsed: falseheaders: Headers {}__proto__: Headersok: trueredirected: falsestatus: 200statusText: "OK"type: "basic"url: "https://gamesense.pub/?KeyValue2_EndpointFullUri:https://kv501.prod.do.dsp.mp.microsoft.com/all"__proto__: ResponsearrayBuffer: ƒ arrayBuffer()blob: ƒ blob()body: (...)bodyUsed: (...)clone: ƒ clone()formData: ƒ formData()arguments: (...)caller: (...)length: 0name: "formData"__proto__: ƒ ()[[Scopes]]: Scopes[0]headers: (...)json: ƒ json()ok: (...)redirected: (...)status: (...)statusText: (...)text: ƒ text()type: (...)url: (...)constructor: ƒ Response()Symbol(Symbol.toStringTag): "Response"get body: ƒ body()get bodyUsed: ƒ bodyUsed()get headers: ƒ headers()get ok: ƒ ok()get redirected: ƒ redirected()get status: ƒ status()get statusText: ƒ statusText()get type: ƒ type()get url: ƒ url()__proto__: Object
VM3861:1 Fetch finished loading: GET "https://gamesense.pub/?KeyValue2_EndpointFullUri:https://kv501.prod.do.dsp.mp.microsoft.com/all".
(anonymous) @ VM3861:1
{"KeyValue_EndpointUri":"https://kv501.prod.do.dsp.mp.microsoft.com/","KeyValue2_EndpointUri":"https://kv501.prod.do.dsp.mp.microsoft.com/","Discovery_EndpointUri":"https://disc501.prod.do.dsp.mp.microsoft.com/","Discovery2_EndpointUri":"https://disc501.prod.do.dsp.mp.microsoft.com/","ContentPolicy_EndpointUri":"https://cp501.prod.do.dsp.mp.microsoft.com/","ContentPolicy2_EndpointUri":"https://cp501.prod.do.dsp.mp.microsoft.com/","KeyValue_EndpointFullUri":"https://kv501.prod.do.dsp.mp.microsoft.com/all","KeyValue2_EndpointFullUri":"https://kv501.prod.do.dsp.mp.microsoft.com/all","Discovery_EndpointFullUri":"https://disc501.prod.do.dsp.mp.microsoft.com/v2/content/{contentId}","Discovery2_EndpointFullUri":"https://disc501.prod.do.dsp.mp.microsoft.com/content/{contentId}","ContentPolicy_EndpointFullUri":"https://cp501.prod.do.dsp.mp.microsoft.com/v3/content","ContentPolicy2_EndpointFullUri":"https://cp501.prod.do.dsp.mp.microsoft.com/content/{contentId}/contentpolicy","Geo_EndpointFullUri":"https://geo.prod.do.dsp.mp.microsoft.com/geo","GeoVersion_EndpointFullUri":"https://geover.prod.do.dsp.mp.microsoft.com/geoversion","Client_MaxCDNConnections":"4","Client_CDNConnSpeedBps":"174762","Client_UpRateAutoLimitEnabled":"0","Client_TraceLevel":"4","Client_DownloadRateAutoLimit":"1","Client_PerfSnapParticipationRate":"0.01","Client_TraceRouteTargets":"[\"download.windowsupdate.com\",\"tlu.dl.delivery.mp.microsoft.com\",\"win10-trt.msedge.net\"]","Client_HttpBlocksizeErrParams":"30-5-1000","Client_ClusterCount":"5","Client_ServicesCertValidationCn":"1","Client_ServicesCertValidationGeo":"1","Client_ProgressHungForegrndTimeoutMsecs":"1800000","Client_TraceRouteParticipationRate":"0.1","Client_MaxBackgroundDownloads":"100","Client_CachedSvcCallAttemptCount":"5","Client_ClusterMaxSizeBytes":"65536","Client_DownloadedPieceCheckIntervalRange":"1-1","Client_MaxForegroundDownloads":"100","Client_MetadataFileGetTimeoutMsecs":"90000","Client_MetadataFileGetTimeoutmSec":"90000","Client_ProgressHungBackgrndTimeoutMsecs":"10800000","Client_OSSMaxUploadSwarms":"50","Client_TelemetryThrottleCount":"10000","ParticipationRate":"1","PublicParticipationRate":"1","UploadLimitGBMonth":"20","Discovery_MaxBucketId":"13","Discovery_MaxPartitionId":"13","Version":"6453CB29F6D8A5320BE36441A6FF7D7346B99E64DCEEBD35584FFB21A2E30F6D"}
